
/home/parnya94/Desktop/lab1/led.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
   0:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
  10:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
  20:	40 00 00 00 24 08 00 00 28 08 00 00 2c 08 00 00     @...$...(...,...
  30:	30 08 00 00 20 08 00 00 34 08 00 00 38 08 00 00     0... ...4...8...

00000040 <__cs3_reset>:
  40:	ea000024 	b	d8 <__cs3_start_asm_sim>

00000044 <__cs3_start_c>:
  44:	e59f8084 	ldr	r8, [pc, #132]	; d0 <__cs3_start_c+0x8c>
  48:	e3580000 	cmp	r8, #0
  4c:	e92d4080 	push	{r7, lr}
  50:	e2488001 	sub	r8, r8, #1
  54:	0a00001c 	beq	cc <__cs3_start_c+0x88>
  58:	e59f7074 	ldr	r7, [pc, #116]	; d4 <__cs3_start_c+0x90>
  5c:	e3a00000 	mov	r0, #0
  60:	e3a01000 	mov	r1, #0
  64:	e2475010 	sub	r5, r7, #16
  68:	e8951020 	ldm	r5, {r5, r12}
  6c:	e5176008 	ldr	r6, [r7, #-8]
  70:	e155000c 	cmp	r5, r12
  74:	008cc006 	addeq	r12, r12, r6
  78:	0a000007 	beq	9c <__cs3_start_c+0x58>
  7c:	e3560000 	cmp	r6, #0
  80:	0a000005 	beq	9c <__cs3_start_c+0x58>
  84:	e1a0e005 	mov	lr, r5
  88:	e8be000c 	ldm	lr!, {r2, r3}
  8c:	e065400e 	rsb	r4, r5, lr
  90:	e1560004 	cmp	r6, r4
  94:	e8ac000c 	stmia	r12!, {r2, r3}
  98:	1afffffa 	bne	88 <__cs3_start_c+0x44>
  9c:	e517e004 	ldr	lr, [r7, #-4]
  a0:	e35e0000 	cmp	lr, #0
  a4:	11a0300c 	movne	r3, r12
  a8:	0a000003 	beq	bc <__cs3_start_c+0x78>
  ac:	e8a30003 	stmia	r3!, {r0, r1}
  b0:	e06c2003 	rsb	r2, r12, r3
  b4:	e15e0002 	cmp	lr, r2
  b8:	1afffffb 	bne	ac <__cs3_start_c+0x68>
  bc:	e2488001 	sub	r8, r8, #1
  c0:	e3780001 	cmn	r8, #1
  c4:	e2877014 	add	r7, r7, #20
  c8:	1affffe5 	bne	64 <__cs3_start_c+0x20>
  cc:	eb0001ba 	bl	7bc <__cs3_premain>
  d0:	00000001 	.word	0x00000001
  d4:	00000920 	.word	0x00000920

000000d8 <__cs3_start_asm_sim>:
  d8:	e28f103c 	add	r1, pc, #60	; 0x3c
  dc:	e3a00016 	mov	r0, #22
  e0:	ef123456 	svc	0x00123456
  e4:	e3500000 	cmp	r0, #0
  e8:	ba000008 	blt	110 <__cs3_start_asm_sim+0x38>
  ec:	e59f2028 	ldr	r2, [pc, #40]	; 11c <__cs3_heap_start_ptr>
  f0:	e59fd01c 	ldr	sp, [pc, #28]	; 114 <__cs3_start_asm_sim+0x3c>
  f4:	e5920008 	ldr	r0, [r2, #8]
  f8:	e3500000 	cmp	r0, #0
  fc:	11a0d000 	movne	sp, r0
 100:	e59f1010 	ldr	r1, [pc, #16]	; 118 <__cs3_start_asm_sim+0x40>
 104:	e5920004 	ldr	r0, [r2, #4]
 108:	e3500000 	cmp	r0, #0
 10c:	15810000 	strne	r0, [r1]
 110:	eaffffcb 	b	44 <__cs3_start_c>
 114:	3ffffffc 	.word	0x3ffffffc
 118:	00000d58 	.word	0x00000d58

0000011c <__cs3_heap_start_ptr>:
 11c:	00000d80 	.word	0x00000d80

00000120 <_start>:
 120:	e51fd000 	ldr	sp, [pc, #-0]	; 128 <_start+0x8>
 124:	eaffffc6 	b	44 <__cs3_start_c>
 128:	3ffffffc 	.word	0x3ffffffc

0000012c <deregister_tm_clones>:
 12c:	e92d4008 	push	{r3, lr}
 130:	e59f002c 	ldr	r0, [pc, #44]	; 164 <deregister_tm_clones+0x38>
 134:	e59f302c 	ldr	r3, [pc, #44]	; 168 <deregister_tm_clones+0x3c>
 138:	e0603003 	rsb	r3, r0, r3
 13c:	e3530006 	cmp	r3, #6
 140:	8a000001 	bhi	14c <deregister_tm_clones+0x20>
 144:	e8bd4008 	pop	{r3, lr}
 148:	e12fff1e 	bx	lr
 14c:	e59f3018 	ldr	r3, [pc, #24]	; 16c <deregister_tm_clones+0x40>
 150:	e3530000 	cmp	r3, #0
 154:	0afffffa 	beq	144 <deregister_tm_clones+0x18>
 158:	e1a0e00f 	mov	lr, pc
 15c:	e12fff13 	bx	r3
 160:	eafffff7 	b	144 <deregister_tm_clones+0x18>
 164:	00000d60 	.word	0x00000d60
 168:	00000d63 	.word	0x00000d63
 16c:	00000000 	.word	0x00000000

00000170 <register_tm_clones>:
 170:	e92d4008 	push	{r3, lr}
 174:	e59f0034 	ldr	r0, [pc, #52]	; 1b0 <register_tm_clones+0x40>
 178:	e59f3034 	ldr	r3, [pc, #52]	; 1b4 <register_tm_clones+0x44>
 17c:	e0603003 	rsb	r3, r0, r3
 180:	e1a03143 	asr	r3, r3, #2
 184:	e0833fa3 	add	r3, r3, r3, lsr #31
 188:	e1b010c3 	asrs	r1, r3, #1
 18c:	1a000001 	bne	198 <register_tm_clones+0x28>
 190:	e8bd4008 	pop	{r3, lr}
 194:	e12fff1e 	bx	lr
 198:	e59f2018 	ldr	r2, [pc, #24]	; 1b8 <register_tm_clones+0x48>
 19c:	e3520000 	cmp	r2, #0
 1a0:	0afffffa 	beq	190 <register_tm_clones+0x20>
 1a4:	e1a0e00f 	mov	lr, pc
 1a8:	e12fff12 	bx	r2
 1ac:	eafffff7 	b	190 <register_tm_clones+0x20>
 1b0:	00000d60 	.word	0x00000d60
 1b4:	00000d60 	.word	0x00000d60
 1b8:	00000000 	.word	0x00000000

000001bc <__do_global_dtors_aux>:
 1bc:	e92d4010 	push	{r4, lr}
 1c0:	e59f402c 	ldr	r4, [pc, #44]	; 1f4 <__do_global_dtors_aux+0x38>
 1c4:	e5d43000 	ldrb	r3, [r4]
 1c8:	e3530000 	cmp	r3, #0
 1cc:	1a000006 	bne	1ec <__do_global_dtors_aux+0x30>
 1d0:	ebffffd5 	bl	12c <deregister_tm_clones>
 1d4:	e59f301c 	ldr	r3, [pc, #28]	; 1f8 <__do_global_dtors_aux+0x3c>
 1d8:	e3530000 	cmp	r3, #0
 1dc:	159f0018 	ldrne	r0, [pc, #24]	; 1fc <__do_global_dtors_aux+0x40>
 1e0:	1320f000 	nopne	{0}
 1e4:	e3a03001 	mov	r3, #1
 1e8:	e5c43000 	strb	r3, [r4]
 1ec:	e8bd4010 	pop	{r4, lr}
 1f0:	e12fff1e 	bx	lr
 1f4:	00000d60 	.word	0x00000d60
 1f8:	00000000 	.word	0x00000000
 1fc:	000008c4 	.word	0x000008c4

00000200 <frame_dummy>:
 200:	e92d4008 	push	{r3, lr}
 204:	e59f3034 	ldr	r3, [pc, #52]	; 240 <frame_dummy+0x40>
 208:	e3530000 	cmp	r3, #0
 20c:	159f0030 	ldrne	r0, [pc, #48]	; 244 <frame_dummy+0x44>
 210:	159f1030 	ldrne	r1, [pc, #48]	; 248 <frame_dummy+0x48>
 214:	1320f000 	nopne	{0}
 218:	e59f002c 	ldr	r0, [pc, #44]	; 24c <frame_dummy+0x4c>
 21c:	e5903000 	ldr	r3, [r0]
 220:	e3530000 	cmp	r3, #0
 224:	0a000003 	beq	238 <frame_dummy+0x38>
 228:	e59f3020 	ldr	r3, [pc, #32]	; 250 <frame_dummy+0x50>
 22c:	e3530000 	cmp	r3, #0
 230:	11a0e00f 	movne	lr, pc
 234:	112fff13 	bxne	r3
 238:	e8bd4008 	pop	{r3, lr}
 23c:	eaffffcb 	b	170 <register_tm_clones>
 240:	00000000 	.word	0x00000000
 244:	000008c4 	.word	0x000008c4
 248:	00000d64 	.word	0x00000d64
 24c:	00000920 	.word	0x00000920
 250:	00000000 	.word	0x00000000

00000254 <main>:
#define HELLO 0
#define CUSTOM 1

// Simple test program 
int main(void)
{
 254:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
 258:	e24dd084 	sub	sp, sp, #132	; 0x84

	int delayamt = 16000;
 	int i, j, c, d;
	

	int helloworld[22] = {0,0,0,0,0,H,E,L,L,O,0,U,U,O,R,L,D,0,0,0,0,0};
 25c:	e3a03000 	mov	r3, #0
 260:	e58d3028 	str	r3, [sp, #40]	; 0x28
 264:	e58d302c 	str	r3, [sp, #44]	; 0x2c
 268:	e58d3030 	str	r3, [sp, #48]	; 0x30
 26c:	e58d3034 	str	r3, [sp, #52]	; 0x34
 270:	e58d3038 	str	r3, [sp, #56]	; 0x38
 274:	e3a02076 	mov	r2, #118	; 0x76
 278:	e58d203c 	str	r2, [sp, #60]	; 0x3c
 27c:	e3a02079 	mov	r2, #121	; 0x79
 280:	e58d2040 	str	r2, [sp, #64]	; 0x40
 284:	e3a02038 	mov	r2, #56	; 0x38
 288:	e58d2044 	str	r2, [sp, #68]	; 0x44
 28c:	e58d2048 	str	r2, [sp, #72]	; 0x48
 290:	e3a0103f 	mov	r1, #63	; 0x3f
 294:	e58d104c 	str	r1, [sp, #76]	; 0x4c
 298:	e58d3050 	str	r3, [sp, #80]	; 0x50
 29c:	e3a0003e 	mov	r0, #62	; 0x3e
 2a0:	e58d0054 	str	r0, [sp, #84]	; 0x54
 2a4:	e58d0058 	str	r0, [sp, #88]	; 0x58
 2a8:	e58d105c 	str	r1, [sp, #92]	; 0x5c
 2ac:	e3a01050 	mov	r1, #80	; 0x50
 2b0:	e58d1060 	str	r1, [sp, #96]	; 0x60
 2b4:	e58d2064 	str	r2, [sp, #100]	; 0x64
 2b8:	e3a0205e 	mov	r2, #94	; 0x5e
 2bc:	e58d2068 	str	r2, [sp, #104]	; 0x68
 2c0:	e58d306c 	str	r3, [sp, #108]	; 0x6c
 2c4:	e58d3070 	str	r3, [sp, #112]	; 0x70
 2c8:	e58d3074 	str	r3, [sp, #116]	; 0x74
 2cc:	e58d3078 	str	r3, [sp, #120]	; 0x78
 2d0:	e58d307c 	str	r3, [sp, #124]	; 0x7c
	int pause = 0;
	i = 0;
	int mode = HELLO;
	int custom[10] = {0,0,0,0,0,0,0,0,0,0,0};
 2d4:	e58d3000 	str	r3, [sp]
 2d8:	e58d3004 	str	r3, [sp, #4]
 2dc:	e58d3008 	str	r3, [sp, #8]
 2e0:	e58d300c 	str	r3, [sp, #12]
 2e4:	e58d3010 	str	r3, [sp, #16]
 2e8:	e58d3014 	str	r3, [sp, #20]
 2ec:	e58d3018 	str	r3, [sp, #24]
 2f0:	e58d301c 	str	r3, [sp, #28]
 2f4:	e58d3020 	str	r3, [sp, #32]
 2f8:	e58d3024 	str	r3, [sp, #36]	; 0x24
	

	int helloworld[22] = {0,0,0,0,0,H,E,L,L,O,0,U,U,O,R,L,D,0,0,0,0,0};
	int pause = 0;
	i = 0;
	int mode = HELLO;
 2fc:	e1a05003 	mov	r5, r3
	int delayamt = 16000;
 	int i, j, c, d;
	

	int helloworld[22] = {0,0,0,0,0,H,E,L,L,O,0,U,U,O,R,L,D,0,0,0,0,0};
	int pause = 0;
 300:	e1a04003 	mov	r4, r3
	i = 0;
 304:	e1a0c003 	mov	r12, r3
	int O = 0x3f;
	int U = 0x3e;
	int R = 0x50;
	int D = 0x5e;

	int delayamt = 16000;
 308:	e3a02dfa 	mov	r2, #16000	; 0x3e80
	int mode = HELLO;
	int custom[10] = {0,0,0,0,0,0,0,0,0,0,0};
        int i1 = 0;	
	while (1)
	{
          switch_value = *(switchptr);
 30c:	e1a0e003 	mov	lr, r3
 310:	e34fef20 	movt	lr, #65312	; 0xff20
	int O = 0x3f;
	int U = 0x3e;
	int R = 0x50;
	int D = 0x5e;

	int delayamt = 16000;
 314:	e3048e20 	movw	r8, #20000	; 0x4e20
       		i = (i+ !pause)%17;
	   }
	  else{ // CUSTOM
		*(hex5hex4) = (custom[i]<<8)+custom[i+1];
		*(hex3hex0) = (custom[i+2]<<24) + (custom[i+3]<<16) + (custom[i+4]<<8) + custom[i+5];
       		i = (i+ !pause)%7;
 318:	e3027493 	movw	r7, #9363	; 0x2493
 31c:	e3497249 	movt	r7, #37449	; 0x9249

	  
	  if(mode == HELLO){
		*(hex5hex4) = (helloworld[i]<<8)+helloworld[i+1];
		*(hex3hex0) = (helloworld[i+2]<<24) + (helloworld[i+3]<<16) + (helloworld[i+4]<<8) + helloworld[i+5];
       		i = (i+ !pause)%17;
 320:	e3076879 	movw	r6, #30841	; 0x7879
 324:	e3476878 	movt	r6, #30840	; 0x7878
	  else{ // CUSTOM
		*(hex5hex4) = (custom[i]<<8)+custom[i+1];
		*(hex3hex0) = (custom[i+2]<<24) + (custom[i+3]<<16) + (custom[i+4]<<8) + custom[i+5];
       		i = (i+ !pause)%7;
	   }
		for ( c = 1 ; c <= delayamt ; c++ )
 328:	e3a00001 	mov	r0, #1
	int mode = HELLO;
	int custom[10] = {0,0,0,0,0,0,0,0,0,0,0};
        int i1 = 0;	
	while (1)
	{
          switch_value = *(switchptr);
 32c:	e59e1030 	ldr	r1, [lr, #48]	; 0x30
	  *(led) = switch_value; // show switch status on LEDs
 330:	e58e1040 	str	r1, [lr, #64]	; 0x40
	  key_value = *(keyptr);
 334:	e59e3000 	ldr	r3, [lr]
	  if(key_value == 1) // KEY0
 338:	e3530001 	cmp	r3, #1
 33c:	1a000005 	bne	358 <main+0x104>
	  { 
	    mode = !mode;
 340:	e2255001 	eor	r5, r5, #1
	    custom[5] = 0x7F & switch_value; 
 344:	e201907f 	and	r9, r1, #127	; 0x7f
 348:	e58d9014 	str	r9, [sp, #20]
	    custom[4] = 0x7 & (switch_value>>7);
 34c:	e7e213d1 	ubfx	r1, r1, #7, #3
 350:	e58d1010 	str	r1, [sp, #16]
 354:	ea000005 	b	370 <main+0x11c>
	  }
	  if(key_value == 2) // KEY1
 358:	e3530002 	cmp	r3, #2
	    delayamt += 1000;
 35c:	02822ffa 	addeq	r2, r2, #1000	; 0x3e8
	  { 
	    mode = !mode;
	    custom[5] = 0x7F & switch_value; 
	    custom[4] = 0x7 & (switch_value>>7);
	  }
	  if(key_value == 2) // KEY1
 360:	0a000005 	beq	37c <main+0x128>
	    delayamt += 1000;
	  if(key_value == 4) // KEY2
 364:	e3530004 	cmp	r3, #4
	    delayamt -= 1000;
 368:	02422ffa 	subeq	r2, r2, #1000	; 0x3e8
	    custom[5] = 0x7F & switch_value; 
	    custom[4] = 0x7 & (switch_value>>7);
	  }
	  if(key_value == 2) // KEY1
	    delayamt += 1000;
	  if(key_value == 4) // KEY2
 36c:	0a000004 	beq	384 <main+0x130>
	    delayamt -= 1000;
	  if(key_value == 8) // KEY3
 370:	e3530008 	cmp	r3, #8
	    pause = !pause;
 374:	02244001 	eoreq	r4, r4, #1
	  }
	  if(key_value == 2) // KEY1
	    delayamt += 1000;
	  if(key_value == 4) // KEY2
	    delayamt -= 1000;
	  if(key_value == 8) // KEY3
 378:	0a000001 	beq	384 <main+0x130>
	    pause = !pause;
	  if(key_value)
 37c:	e3530000 	cmp	r3, #0
 380:	0a000002 	beq	390 <main+0x13c>
	int O = 0x3f;
	int U = 0x3e;
	int R = 0x50;
	int D = 0x5e;

	int delayamt = 16000;
 384:	e1a03008 	mov	r3, r8
	  if(key_value == 4) // KEY2
	    delayamt -= 1000;
	  if(key_value == 8) // KEY3
	    pause = !pause;
	  if(key_value)
	    for ( c = 1; c <= 20000; c++ );
 388:	e2533001 	subs	r3, r3, #1
 38c:	1afffffd 	bne	388 <main+0x134>

	  
	  if(mode == HELLO){
 390:	e3550000 	cmp	r5, #0
 394:	1a00001a 	bne	404 <main+0x1b0>
		*(hex5hex4) = (helloworld[i]<<8)+helloworld[i+1];
 398:	e28d1080 	add	r1, sp, #128	; 0x80
 39c:	e081310c 	add	r3, r1, r12, lsl #2
 3a0:	e5131058 	ldr	r1, [r3, #-88]	; 0xffffffa8
 3a4:	e28d9080 	add	r9, sp, #128	; 0x80
 3a8:	e5133054 	ldr	r3, [r3, #-84]	; 0xffffffac
 3ac:	e0833401 	add	r3, r3, r1, lsl #8
 3b0:	e58e3010 	str	r3, [lr, #16]
		*(hex3hex0) = (helloworld[i+2]<<24) + (helloworld[i+3]<<16) + (helloworld[i+4]<<8) + helloworld[i+5];
 3b4:	e089310c 	add	r3, r9, r12, lsl #2
 3b8:	e5131050 	ldr	r1, [r3, #-80]	; 0xffffffb0
 3bc:	e513304c 	ldr	r3, [r3, #-76]	; 0xffffffb4
 3c0:	e1a03803 	lsl	r3, r3, #16
 3c4:	e0833c01 	add	r3, r3, r1, lsl #24
 3c8:	e089110c 	add	r1, r9, r12, lsl #2
 3cc:	e5111048 	ldr	r1, [r1, #-72]	; 0xffffffb8
 3d0:	e0831401 	add	r1, r3, r1, lsl #8
 3d4:	e089310c 	add	r3, r9, r12, lsl #2
 3d8:	e5133044 	ldr	r3, [r3, #-68]	; 0xffffffbc
 3dc:	e0813003 	add	r3, r1, r3
 3e0:	e58e3020 	str	r3, [lr, #32]
       		i = (i+ !pause)%17;
 3e4:	e2241001 	eor	r1, r4, #1
 3e8:	e081100c 	add	r1, r1, r12
 3ec:	e0cc3196 	smull	r3, r12, r6, r1
 3f0:	e1a03fc1 	asr	r3, r1, #31
 3f4:	e063c1cc 	rsb	r12, r3, r12, asr #3
 3f8:	e08cc20c 	add	r12, r12, r12, lsl #4
 3fc:	e06cc001 	rsb	r12, r12, r1
 400:	ea000019 	b	46c <main+0x218>
	   }
	  else{ // CUSTOM
		*(hex5hex4) = (custom[i]<<8)+custom[i+1];
 404:	e28d9080 	add	r9, sp, #128	; 0x80
 408:	e089310c 	add	r3, r9, r12, lsl #2
 40c:	e5131080 	ldr	r1, [r3, #-128]	; 0xffffff80
 410:	e513307c 	ldr	r3, [r3, #-124]	; 0xffffff84
 414:	e0833401 	add	r3, r3, r1, lsl #8
 418:	e58e3010 	str	r3, [lr, #16]
		*(hex3hex0) = (custom[i+2]<<24) + (custom[i+3]<<16) + (custom[i+4]<<8) + custom[i+5];
 41c:	e089310c 	add	r3, r9, r12, lsl #2
 420:	e5131078 	ldr	r1, [r3, #-120]	; 0xffffff88
 424:	e5133074 	ldr	r3, [r3, #-116]	; 0xffffff8c
 428:	e1a03803 	lsl	r3, r3, #16
 42c:	e0833c01 	add	r3, r3, r1, lsl #24
 430:	e089110c 	add	r1, r9, r12, lsl #2
 434:	e5111070 	ldr	r1, [r1, #-112]	; 0xffffff90
 438:	e0831401 	add	r1, r3, r1, lsl #8
 43c:	e089310c 	add	r3, r9, r12, lsl #2
 440:	e513306c 	ldr	r3, [r3, #-108]	; 0xffffff94
 444:	e0813003 	add	r3, r1, r3
 448:	e58e3020 	str	r3, [lr, #32]
       		i = (i+ !pause)%7;
 44c:	e2241001 	eor	r1, r4, #1
 450:	e081100c 	add	r1, r1, r12
 454:	e0cc3197 	smull	r3, r12, r7, r1
 458:	e08cc001 	add	r12, r12, r1
 45c:	e1a03fc1 	asr	r3, r1, #31
 460:	e063c14c 	rsb	r12, r3, r12, asr #2
 464:	e06cc18c 	rsb	r12, r12, r12, lsl #3
 468:	e06cc001 	rsb	r12, r12, r1
	   }
		for ( c = 1 ; c <= delayamt ; c++ )
 46c:	e3520000 	cmp	r2, #0
 470:	daffffad 	ble	32c <main+0xd8>
 474:	e1a01000 	mov	r1, r0
 478:	ea000005 	b	494 <main+0x240>
		for ( d = 1 ; d <= delayamt ; d++ )
 47c:	e2833001 	add	r3, r3, #1
 480:	e1530002 	cmp	r3, r2
 484:	dafffffc 	ble	47c <main+0x228>
	  else{ // CUSTOM
		*(hex5hex4) = (custom[i]<<8)+custom[i+1];
		*(hex3hex0) = (custom[i+2]<<24) + (custom[i+3]<<16) + (custom[i+4]<<8) + custom[i+5];
       		i = (i+ !pause)%7;
	   }
		for ( c = 1 ; c <= delayamt ; c++ )
 488:	e2811001 	add	r1, r1, #1
 48c:	e1510002 	cmp	r1, r2
 490:	caffffa5 	bgt	32c <main+0xd8>
	int O = 0x3f;
	int U = 0x3e;
	int R = 0x50;
	int D = 0x5e;

	int delayamt = 16000;
 494:	e1a03000 	mov	r3, r0
 498:	eafffff7 	b	47c <main+0x228>

0000049c <atexit>:
 49c:	e92d4008 	push	{r3, lr}
 4a0:	e1a01000 	mov	r1, r0
 4a4:	e3a00000 	mov	r0, #0
 4a8:	e1a03000 	mov	r3, r0
 4ac:	e1a02000 	mov	r2, r0
 4b0:	eb00000e 	bl	4f0 <__register_exitproc>
 4b4:	e8bd4008 	pop	{r3, lr}
 4b8:	e12fff1e 	bx	lr

000004bc <exit>:
 4bc:	e92d4008 	push	{r3, lr}
 4c0:	e3a01000 	mov	r1, #0
 4c4:	e1a04000 	mov	r4, r0
 4c8:	eb000044 	bl	5e0 <__call_exitprocs>
 4cc:	e59f3018 	ldr	r3, [pc, #24]	; 4ec <exit+0x30>
 4d0:	e5930000 	ldr	r0, [r3]
 4d4:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
 4d8:	e3530000 	cmp	r3, #0
 4dc:	11a0e00f 	movne	lr, pc
 4e0:	112fff13 	bxne	r3
 4e4:	e1a00004 	mov	r0, r4
 4e8:	eb0000c6 	bl	808 <_exit>
 4ec:	000008c8 	.word	0x000008c8

000004f0 <__register_exitproc>:
 4f0:	e59fc0e0 	ldr	r12, [pc, #224]	; 5d8 <__register_exitproc+0xe8>
 4f4:	e92d4070 	push	{r4, r5, r6, lr}
 4f8:	e59c5000 	ldr	r5, [r12]
 4fc:	e595c148 	ldr	r12, [r5, #328]	; 0x148
 500:	e35c0000 	cmp	r12, #0
 504:	0285cf53 	addeq	r12, r5, #332	; 0x14c
 508:	e59c4004 	ldr	r4, [r12, #4]
 50c:	0585c148 	streq	r12, [r5, #328]	; 0x148
 510:	e354001f 	cmp	r4, #31
 514:	e24dd010 	sub	sp, sp, #16
 518:	e1a06000 	mov	r6, r0
 51c:	da000016 	ble	57c <__register_exitproc+0x8c>
 520:	e59f00b4 	ldr	r0, [pc, #180]	; 5dc <__register_exitproc+0xec>
 524:	e3500000 	cmp	r0, #0
 528:	1a000003 	bne	53c <__register_exitproc+0x4c>
 52c:	e3e00000 	mvn	r0, #0
 530:	e28dd010 	add	sp, sp, #16
 534:	e8bd4070 	pop	{r4, r5, r6, lr}
 538:	e12fff1e 	bx	lr
 53c:	e3a00e19 	mov	r0, #400	; 0x190
 540:	e58d100c 	str	r1, [sp, #12]
 544:	e58d2008 	str	r2, [sp, #8]
 548:	e58d3004 	str	r3, [sp, #4]
 54c:	e320f000 	nop	{0}
 550:	e250c000 	subs	r12, r0, #0
 554:	e59d100c 	ldr	r1, [sp, #12]
 558:	e59d2008 	ldr	r2, [sp, #8]
 55c:	e59d3004 	ldr	r3, [sp, #4]
 560:	0afffff1 	beq	52c <__register_exitproc+0x3c>
 564:	e5950148 	ldr	r0, [r5, #328]	; 0x148
 568:	e3a04000 	mov	r4, #0
 56c:	e88c0011 	stm	r12, {r0, r4}
 570:	e585c148 	str	r12, [r5, #328]	; 0x148
 574:	e58c4188 	str	r4, [r12, #392]	; 0x188
 578:	e58c418c 	str	r4, [r12, #396]	; 0x18c
 57c:	e3560000 	cmp	r6, #0
 580:	1a000007 	bne	5a4 <__register_exitproc+0xb4>
 584:	e2843001 	add	r3, r4, #1
 588:	e3a00000 	mov	r0, #0
 58c:	e2844002 	add	r4, r4, #2
 590:	e58c3004 	str	r3, [r12, #4]
 594:	e78c1104 	str	r1, [r12, r4, lsl #2]
 598:	e28dd010 	add	sp, sp, #16
 59c:	e8bd4070 	pop	{r4, r5, r6, lr}
 5a0:	e12fff1e 	bx	lr
 5a4:	e3a05001 	mov	r5, #1
 5a8:	e1a05415 	lsl	r5, r5, r4
 5ac:	e08c0104 	add	r0, r12, r4, lsl #2
 5b0:	e5802088 	str	r2, [r0, #136]	; 0x88
 5b4:	e59c2188 	ldr	r2, [r12, #392]	; 0x188
 5b8:	e1822005 	orr	r2, r2, r5
 5bc:	e58c2188 	str	r2, [r12, #392]	; 0x188
 5c0:	e5803108 	str	r3, [r0, #264]	; 0x108
 5c4:	e3560002 	cmp	r6, #2
 5c8:	059c318c 	ldreq	r3, [r12, #396]	; 0x18c
 5cc:	01835005 	orreq	r5, r3, r5
 5d0:	058c518c 	streq	r5, [r12, #396]	; 0x18c
 5d4:	eaffffea 	b	584 <__register_exitproc+0x94>
 5d8:	000008c8 	.word	0x000008c8
 5dc:	00000000 	.word	0x00000000

000005e0 <__call_exitprocs>:
 5e0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
 5e4:	e59f315c 	ldr	r3, [pc, #348]	; 748 <__call_exitprocs+0x168>
 5e8:	e5933000 	ldr	r3, [r3]
 5ec:	e24dd014 	sub	sp, sp, #20
 5f0:	e2832f52 	add	r2, r3, #328	; 0x148
 5f4:	e58d3004 	str	r3, [sp, #4]
 5f8:	e58d0008 	str	r0, [sp, #8]
 5fc:	e58d200c 	str	r2, [sp, #12]
 600:	e1a07001 	mov	r7, r1
 604:	e3a09001 	mov	r9, #1
 608:	e59d3004 	ldr	r3, [sp, #4]
 60c:	e5938148 	ldr	r8, [r3, #328]	; 0x148
 610:	e3580000 	cmp	r8, #0
 614:	0a000038 	beq	6fc <__call_exitprocs+0x11c>
 618:	e59db00c 	ldr	r11, [sp, #12]
 61c:	e5986004 	ldr	r6, [r8, #4]
 620:	e2564001 	subs	r4, r6, #1
 624:	50885106 	addpl	r5, r8, r6, lsl #2
 628:	52866002 	addpl	r6, r6, #2
 62c:	52855f42 	addpl	r5, r5, #264	; 0x108
 630:	50886106 	addpl	r6, r8, r6, lsl #2
 634:	5a000008 	bpl	65c <__call_exitprocs+0x7c>
 638:	ea00002c 	b	6f0 <__call_exitprocs+0x110>
 63c:	e5153004 	ldr	r3, [r5, #-4]
 640:	e1530007 	cmp	r3, r7
 644:	0a000006 	beq	664 <__call_exitprocs+0x84>
 648:	e2444001 	sub	r4, r4, #1
 64c:	e3740001 	cmn	r4, #1
 650:	e2455004 	sub	r5, r5, #4
 654:	e2466004 	sub	r6, r6, #4
 658:	0a000024 	beq	6f0 <__call_exitprocs+0x110>
 65c:	e3570000 	cmp	r7, #0
 660:	1afffff5 	bne	63c <__call_exitprocs+0x5c>
 664:	e5983004 	ldr	r3, [r8, #4]
 668:	e2433001 	sub	r3, r3, #1
 66c:	e1530004 	cmp	r3, r4
 670:	e5163004 	ldr	r3, [r6, #-4]
 674:	13a02000 	movne	r2, #0
 678:	05884004 	streq	r4, [r8, #4]
 67c:	15062004 	strne	r2, [r6, #-4]
 680:	e3530000 	cmp	r3, #0
 684:	0affffef 	beq	648 <__call_exitprocs+0x68>
 688:	e1a02419 	lsl	r2, r9, r4
 68c:	e5981188 	ldr	r1, [r8, #392]	; 0x188
 690:	e1120001 	tst	r2, r1
 694:	e598a004 	ldr	r10, [r8, #4]
 698:	0a00000d 	beq	6d4 <__call_exitprocs+0xf4>
 69c:	e598118c 	ldr	r1, [r8, #396]	; 0x18c
 6a0:	e1120001 	tst	r2, r1
 6a4:	1a00000d 	bne	6e0 <__call_exitprocs+0x100>
 6a8:	e59d0008 	ldr	r0, [sp, #8]
 6ac:	e5151084 	ldr	r1, [r5, #-132]	; 0xffffff7c
 6b0:	e1a0e00f 	mov	lr, pc
 6b4:	e12fff13 	bx	r3
 6b8:	e5983004 	ldr	r3, [r8, #4]
 6bc:	e153000a 	cmp	r3, r10
 6c0:	1affffd0 	bne	608 <__call_exitprocs+0x28>
 6c4:	e59b3000 	ldr	r3, [r11]
 6c8:	e1530008 	cmp	r3, r8
 6cc:	0affffdd 	beq	648 <__call_exitprocs+0x68>
 6d0:	eaffffcc 	b	608 <__call_exitprocs+0x28>
 6d4:	e1a0e00f 	mov	lr, pc
 6d8:	e12fff13 	bx	r3
 6dc:	eafffff5 	b	6b8 <__call_exitprocs+0xd8>
 6e0:	e5150084 	ldr	r0, [r5, #-132]	; 0xffffff7c
 6e4:	e1a0e00f 	mov	lr, pc
 6e8:	e12fff13 	bx	r3
 6ec:	eafffff1 	b	6b8 <__call_exitprocs+0xd8>
 6f0:	e59f2054 	ldr	r2, [pc, #84]	; 74c <__call_exitprocs+0x16c>
 6f4:	e3520000 	cmp	r2, #0
 6f8:	1a000002 	bne	708 <__call_exitprocs+0x128>
 6fc:	e28dd014 	add	sp, sp, #20
 700:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
 704:	e12fff1e 	bx	lr
 708:	e5983004 	ldr	r3, [r8, #4]
 70c:	e3530000 	cmp	r3, #0
 710:	e5983000 	ldr	r3, [r8]
 714:	1a000008 	bne	73c <__call_exitprocs+0x15c>
 718:	e3530000 	cmp	r3, #0
 71c:	0a000006 	beq	73c <__call_exitprocs+0x15c>
 720:	e1a00008 	mov	r0, r8
 724:	e58b3000 	str	r3, [r11]
 728:	e320f000 	nop	{0}
 72c:	e59b8000 	ldr	r8, [r11]
 730:	e3580000 	cmp	r8, #0
 734:	1affffb8 	bne	61c <__call_exitprocs+0x3c>
 738:	eaffffef 	b	6fc <__call_exitprocs+0x11c>
 73c:	e1a0b008 	mov	r11, r8
 740:	e1a08003 	mov	r8, r3
 744:	eafffff9 	b	730 <__call_exitprocs+0x150>
 748:	000008c8 	.word	0x000008c8
 74c:	00000000 	.word	0x00000000

00000750 <register_fini>:
 750:	e92d4008 	push	{r3, lr}
 754:	e59f3010 	ldr	r3, [pc, #16]	; 76c <register_fini+0x1c>
 758:	e3530000 	cmp	r3, #0
 75c:	159f000c 	ldrne	r0, [pc, #12]	; 770 <register_fini+0x20>
 760:	1bffff4d 	blne	49c <atexit>
 764:	e8bd4008 	pop	{r3, lr}
 768:	e12fff1e 	bx	lr
 76c:	000008f0 	.word	0x000008f0
 770:	00000774 	.word	0x00000774

00000774 <__libc_fini_array>:
 774:	e92d4038 	push	{r3, r4, r5, lr}
 778:	e59f5034 	ldr	r5, [pc, #52]	; 7b4 <__libc_fini_array+0x40>
 77c:	e59f4034 	ldr	r4, [pc, #52]	; 7b8 <__libc_fini_array+0x44>
 780:	e0654004 	rsb	r4, r5, r4
 784:	e1b04144 	asrs	r4, r4, #2
 788:	10855104 	addne	r5, r5, r4, lsl #2
 78c:	0a000005 	beq	7a8 <__libc_fini_array+0x34>
 790:	e2444001 	sub	r4, r4, #1
 794:	e5353004 	ldr	r3, [r5, #-4]!
 798:	e1a0e00f 	mov	lr, pc
 79c:	e12fff13 	bx	r3
 7a0:	e3540000 	cmp	r4, #0
 7a4:	1afffff9 	bne	790 <__libc_fini_array+0x1c>
 7a8:	eb000050 	bl	8f0 <__libc_fini>
 7ac:	e8bd4038 	pop	{r3, r4, r5, lr}
 7b0:	e12fff1e 	bx	lr
 7b4:	00000908 	.word	0x00000908
 7b8:	0000090c 	.word	0x0000090c

000007bc <__cs3_premain>:
 7bc:	e92d4008 	push	{r3, lr}
 7c0:	eb00001d 	bl	83c <__libc_init_array>
 7c4:	e59f3030 	ldr	r3, [pc, #48]	; 7fc <__cs3_premain+0x40>
 7c8:	e3530000 	cmp	r3, #0
 7cc:	15930000 	ldrne	r0, [r3]
 7d0:	01a00003 	moveq	r0, r3
 7d4:	e59f3024 	ldr	r3, [pc, #36]	; 800 <__cs3_premain+0x44>
 7d8:	e3530000 	cmp	r3, #0
 7dc:	15931000 	ldrne	r1, [r3]
 7e0:	01a01003 	moveq	r1, r3
 7e4:	e3a02000 	mov	r2, #0
 7e8:	ebfffe99 	bl	254 <main>
 7ec:	e59f3010 	ldr	r3, [pc, #16]	; 804 <__cs3_premain+0x48>
 7f0:	e3530000 	cmp	r3, #0
 7f4:	1bffff30 	blne	4bc <exit>
 7f8:	eafffffe 	b	7f8 <__cs3_premain+0x3c>
	...
 804:	000004bc 	.word	0x000004bc

00000808 <_exit>:
 808:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 80c:	e3a00018 	mov	r0, #24
 810:	e59f1004 	ldr	r1, [pc, #4]	; 81c <_exit+0x14>
 814:	ef123456 	svc	0x00123456
 818:	eafffffe 	b	818 <_exit+0x10>
 81c:	00020026 	.word	0x00020026

00000820 <__cs3_isr_interrupt>:
 820:	eafffffe 	b	820 <__cs3_isr_interrupt>

00000824 <__cs3_isr_undef>:
 824:	eafffffe 	b	824 <__cs3_isr_undef>

00000828 <__cs3_isr_swi>:
 828:	eafffffe 	b	828 <__cs3_isr_swi>

0000082c <__cs3_isr_pabort>:
 82c:	eafffffe 	b	82c <__cs3_isr_pabort>

00000830 <__cs3_isr_dabort>:
 830:	eafffffe 	b	830 <__cs3_isr_dabort>

00000834 <__cs3_isr_irq>:
 834:	eafffffe 	b	834 <__cs3_isr_irq>

00000838 <__cs3_isr_fiq>:
 838:	eafffffe 	b	838 <__cs3_isr_fiq>

0000083c <__libc_init_array>:
 83c:	e92d4070 	push	{r4, r5, r6, lr}
 840:	e59f506c 	ldr	r5, [pc, #108]	; 8b4 <__libc_init_array+0x78>
 844:	e59f606c 	ldr	r6, [pc, #108]	; 8b8 <__libc_init_array+0x7c>
 848:	e0656006 	rsb	r6, r5, r6
 84c:	e1b06146 	asrs	r6, r6, #2
 850:	12455004 	subne	r5, r5, #4
 854:	13a04000 	movne	r4, #0
 858:	0a000005 	beq	874 <__libc_init_array+0x38>
 85c:	e2844001 	add	r4, r4, #1
 860:	e5b53004 	ldr	r3, [r5, #4]!
 864:	e1a0e00f 	mov	lr, pc
 868:	e12fff13 	bx	r3
 86c:	e1560004 	cmp	r6, r4
 870:	1afffff9 	bne	85c <__libc_init_array+0x20>
 874:	e59f5040 	ldr	r5, [pc, #64]	; 8bc <__libc_init_array+0x80>
 878:	e59f6040 	ldr	r6, [pc, #64]	; 8c0 <__libc_init_array+0x84>
 87c:	e0656006 	rsb	r6, r5, r6
 880:	eb000012 	bl	8d0 <_init>
 884:	e1b06146 	asrs	r6, r6, #2
 888:	12455004 	subne	r5, r5, #4
 88c:	13a04000 	movne	r4, #0
 890:	0a000005 	beq	8ac <__libc_init_array+0x70>
 894:	e2844001 	add	r4, r4, #1
 898:	e5b53004 	ldr	r3, [r5, #4]!
 89c:	e1a0e00f 	mov	lr, pc
 8a0:	e12fff13 	bx	r3
 8a4:	e1560004 	cmp	r6, r4
 8a8:	1afffff9 	bne	894 <__libc_init_array+0x58>
 8ac:	e8bd4070 	pop	{r4, r5, r6, lr}
 8b0:	e12fff1e 	bx	lr
 8b4:	000008e8 	.word	0x000008e8
 8b8:	000008e8 	.word	0x000008e8
 8bc:	000008e8 	.word	0x000008e8
 8c0:	000008f0 	.word	0x000008f0

Disassembly of section .rodata:

000008c8 <_global_impure_ptr>:
 8c8:	00000930 00000043                       0...C...

000008d0 <_init>:
 8d0:	e1a0c00d 	mov	r12, sp
 8d4:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
 8d8:	e24cb004 	sub	r11, r12, #4
 8dc:	e24bd028 	sub	sp, r11, #40	; 0x28
 8e0:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
 8e4:	e12fff1e 	bx	lr

000008e8 <__init_array_start>:
 8e8:	00000750 	.word	0x00000750

000008ec <__frame_dummy_init_array_entry>:
 8ec:	00000200                                ....

000008f0 <__libc_fini>:
 8f0:	e1a0c00d 	mov	r12, sp
 8f4:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
 8f8:	e24cb004 	sub	r11, r12, #4
 8fc:	e24bd028 	sub	sp, r11, #40	; 0x28
 900:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
 904:	e12fff1e 	bx	lr

00000908 <__fini_array_start>:
 908:	000001bc 	.word	0x000001bc

0000090c <__cs3_regions>:
	...
 918:	00000d60 	.word	0x00000d60
 91c:	00000020 	.word	0x00000020
